play.http.secret.key="changeme"
play.http.secret.key=${?APPLICATION_SECRET}

## Akka
# https://www.playframework.com/documentation/latest/ScalaAkka#Configuration
# https://www.playframework.com/documentation/latest/JavaAkka#Configuration
# ~~~~~
# Play uses Akka internally and exposes Akka Streams and actors in Websockets and
# other streaming HTTP responses.

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    default-dispatcher {
      fork-join-executor {
        parallelism-min = 16
        parallelism-max = 64
        task-peeking-mode = FIFO
      }
    }
    debug {
      receive = on
      autoreceive = on
      lifecycle = on
    }
  }
}


play.modules {
}

play.i18n {
  langs = [ "en" ]
}

## Play HTTP settings
# ~~~~~
play.http {
  session {
  }

  flash {
  }
}

## Netty Provider
# https://www.playframework.com/documentation/latest/SettingsNetty
# ~~~~~
play.server.netty {
}

## WS (HTTP Client)
# https://www.playframework.com/documentation/latest/ScalaWS#Configuring-WS
# ~~~~~
# The HTTP client primarily used for REST APIs.  The default client can be
# configured directly, but you can also create different client instances
# with customized settings. You must enable this by adding to build.sbt:
#
# libraryDependencies += ws // or javaWs if using java
#
play.ws {

  ## WS SSL
  # https://www.playframework.com/documentation/latest/WsSSL
  # ~~~~~
  ssl {
    # Configuring HTTPS with Play WS does not require programming.  You can
    # set up both trustManager and keyManager for mutual authentication, and
    # turn on JSSE debugging in development with a reload.
    #debug.handshake = true
    #trustManager = {
    #  stores = [
    #    { type = "JKS", path = "exampletrust.jks" }
    #  ]
    #}
  }
}

play.cache {
}

play.filters {



  cors {
  }

  csrf {
  }

  headers {
  }

  hosts {
    # Allow requests to example.com, its subdomains, and localhost:9000.
    allowed = [".example.com", "localhost:9000",".herokuapp.com" , "bjason-multicopter.herokuapp.com" ]
  }
}

play.evolutions {
}

play.db {
  prototype {
  }
}

db {
}

play.assets {
  path = "/public"
  urlPrefix = "/assets"
}
